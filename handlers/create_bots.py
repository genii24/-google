from telebot import types

MANAGER_ID = 7016453953  # ID –º–µ–Ω–µ–¥–∂–µ—Ä–∞
user_manager_mapping = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–≤—è–∑–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


def register_create_bots_handler(bot):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ '–°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–æ–≤'."""

    @bot.message_handler(func=lambda message: message.text == "ü§ñ –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–æ–≤")
    def handle_bots_creation(message):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –±–æ—Ç–æ–≤."""
        bot.send_message(
            message.chat.id,
            "ü§ñ *–°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–æ–≤:*\n\n"
            "–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É –±–æ—Ç–æ–≤ –¥–ª—è Telegram!\n\n"
            "*üéØ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–æ–≤:*\n"
            "- –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á.\n"
            "- –†–∞—Å—Å—ã–ª–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.\n"
            "- –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö.\n"
            "- –ò–≥—Ä—ã –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è.\n"
            "- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API.\n"
            "- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤.\n\n"
            "üì© –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º: @manager\n\n"
            "*üëá –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ç–∏–ø –±–æ—Ç–∞ –Ω–∏–∂–µ:*",
            parse_mode="Markdown",
            reply_markup=create_main_inline_keyboard()
        )

    def create_main_inline_keyboard():
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        buttons = [
            types.InlineKeyboardButton(text="üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á", callback_data="bot_task_automation"),
            types.InlineKeyboardButton(text="üîî –†–∞—Å—Å—ã–ª–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π", callback_data="bot_notification"),
            types.InlineKeyboardButton(text="üìä –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö", callback_data="bot_data_collection"),
            types.InlineKeyboardButton(text="üéÆ –ò–≥—Ä—ã –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", callback_data="bot_games"),
            types.InlineKeyboardButton(text="üîó –†–∞–±–æ—Ç–∞ —Å API", callback_data="bot_api_integration"),
            types.InlineKeyboardButton(text="‚ùì –ß–∞—Ç –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤", callback_data="bot_qna")
        ]
        keyboard.add(*buttons)
        return keyboard

    def create_back_and_order_keyboard():
        """–°–æ–∑–¥–∞—ë–º inline-–∫–Ω–æ–ø–∫–∏: –ù–∞–∑–∞–¥ –∏ –ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É."""
        keyboard = types.InlineKeyboardMarkup(row_width=2)
        keyboard.add(
            types.InlineKeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥", callback_data="bot_back"),
            types.InlineKeyboardButton(text="üíº –ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É", callback_data="order_service")
        )
        return keyboard

    @bot.callback_query_handler(func=lambda call: call.data.startswith("bot_") or call.data == "order_service")
    def handle_inline_bot_options(call):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –æ–ø—Ü–∏–π –∏ –∫–Ω–æ–ø–∫–∏ '–ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É'."""
        if call.data == "bot_task_automation":
            bot.send_message(
                chat_id=call.message.chat.id,
                text="üîÑ *–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–¥–∞—á*\n\n"
                     "–ë–æ—Ç –ø–æ–º–æ–∂–µ—Ç:\n"
                     "‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.\n"
                     "‚úÖ –£–ø—Ä–∞–≤–ª—è—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º.\n"
                     "‚úÖ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏.\n\n"
                     ,
                parse_mode="Markdown",
                reply_markup=create_back_and_order_keyboard()
            )
        elif call.data == "bot_notification":
            bot.send_message(
                chat_id=call.message.chat.id,
                text="üîî *–†–∞—Å—Å—ã–ª–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π*\n\n"
                     "–≠—Ç–∏ –±–æ—Ç—ã –ø–æ–º–æ–≥–∞—é—Ç:\n"
                     "‚Ä¢ –£–≤–µ–¥–æ–º–ª—è—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ –Ω—É–∂–Ω–æ–µ –≤—Ä–µ–º—è.\n"
                     "‚Ä¢ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –º–∞—Å—Å–æ–≤—É—é —Ä–∞—Å—Å—ã–ª–∫—É.\n"
                     "‚Ä¢ –†–∞–±–æ—Ç–∞—Ç—å –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é —Å –∞—É–¥–∏—Ç–æ—Ä–∏–µ–π.\n\n"
                     ,
                parse_mode="Markdown",
                reply_markup=create_back_and_order_keyboard()
            )
        elif call.data == "bot_data_collection":
            bot.send_message(
                chat_id=call.message.chat.id,
                text="üìä *–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö*\n\n"
                     "–ü–æ–∑–≤–æ–ª—è–µ—Ç:\n"
                     "üìù –°–æ–±–∏—Ä–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∞–Ω–∫–µ—Ç—ã, —Ñ–æ—Ä–º—ã).\n"
                     "üìä –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CRM –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.\n"
                     "üìÇ –•—Ä–∞–Ω–µ–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö.\n",
                parse_mode="Markdown",
                reply_markup=create_back_and_order_keyboard()
            )
        elif call.data == "bot_games":
            bot.send_message(
                chat_id=call.message.chat.id,
                text="üéÆ *–ò–≥—Ä—ã –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è*\n\n"
                     "–°–æ–∑–¥–∞—ë–º –∏–≥—Ä–æ–≤—ã–µ –±–æ—Ç—ã:\n"
                     "‚Ä¢ –í–∏–∫—Ç–æ—Ä–∏–Ω—ã –∏ —Ç–µ—Å—Ç—ã.\n"
                     "‚Ä¢ –ò–≥—Ä—ã –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.\n"
                     "‚Ä¢ –†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –±–æ—Ç-–∫–≤–µ—Å—Ç—ã.\n",
                parse_mode="Markdown",
                reply_markup=create_back_and_order_keyboard()
            )
        elif call.data == "bot_api_integration":
            bot.send_message(
                chat_id=call.message.chat.id,
                text="üîó *–†–∞–±–æ—Ç–∞ —Å API*\n\n"
                     "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è API:\n"
                     "‚Ä¢ CRM-—Å–∏—Å—Ç–µ–º—ã, –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤.\n"
                     "‚Ä¢ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö.\n"
                     "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤.\n",
                parse_mode="Markdown",
                reply_markup=create_back_and_order_keyboard()
            )
        elif call.data == "bot_qna":
            bot.send_message(
                chat_id=call.message.chat.id,
                text="‚ùì *–ß–∞—Ç –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤*\n\n"
                     "–§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞ –¥–ª—è –æ–±—â–µ–Ω–∏—è:\n"
                     "üì® –û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã.\n"
                     "üëî –ú–æ–∂–µ—Ç –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Å–ª–æ–∂–Ω—ã–π –≤–æ–ø—Ä–æ—Å –æ–ø–µ—Ä–∞—Ç–æ—Ä—É.\n"
                     "üìà –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞–ø—Ä–æ—Å–æ–≤.\n",
                parse_mode="Markdown",
                reply_markup=create_back_and_order_keyboard()
            )
        elif call.data == "bot_back":
            bot.send_message(
                chat_id=call.message.chat.id,
                text="‚¨Ö *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–æ–≤:*\n\n"
                     "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ç–∏–ø –±–æ—Ç–∞ –Ω–∏–∂–µ:",
                parse_mode="Markdown",
                reply_markup=create_main_inline_keyboard()
            )
        elif call.data == "order_service":
            bot.send_message(
                chat_id=call.message.chat.id,
                text="üìù *–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –¢–ó (—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ), –∏ –æ–Ω–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É.*\n\n"
                     "–í–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –º–æ–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å.",
                parse_mode="Markdown"
            )

            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –≤ —Ä–µ–∂–∏–º "–æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
            bot.register_next_step_handler_by_chat_id(
                call.message.chat.id, handle_user_tz_submission
            )

    def handle_user_tz_submission(message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¢–ó."""
        user_tz = message.text
        user_manager_mapping[MANAGER_ID] = message.chat.id  # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É
        bot.send_message(
            chat_id=message.chat.id,
            text="‚úÖ *–í–∞—à–µ –¢–ó —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É!*\n"
                 "–û–∂–∏–¥–∞–π—Ç–µ, –æ–Ω —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.",
            parse_mode="Markdown"
        )
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton(text="‚úèÔ∏è –û—Ç–≤–µ—Ç–∏—Ç—å", callback_data="reply_to_user"))

        bot.send_message(
            chat_id=MANAGER_ID,
            text=f"üì© *–ù–æ–≤–æ–µ –¢–ó –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:*\n"
                 f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{message.from_user.username or '–ù–µ—Ç –Ω–∏–∫–∞'}\n"
                 f"üí¨ –¢–µ–∫—Å—Ç –¢–ó:\n{user_tz}",
            reply_markup=keyboard,
            parse_mode="Markdown"
        )

    @bot.callback_query_handler(func=lambda call: call.data == "reply_to_user")
    def handle_reply_to_user(call):
        """–ú–µ–Ω–µ–¥–∂–µ—Ä –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É '–û—Ç–≤–µ—Ç–∏—Ç—å', –≤–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞."""
        bot.send_message(
            chat_id=call.message.chat.id,
            text="‚úâÔ∏è *–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.*",
            parse_mode="Markdown"
        )
        bot.register_next_step_handler_by_chat_id(call.message.chat.id, send_reply_to_user)

    def send_reply_to_user(message):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
        user_id = user_manager_mapping.get(message.chat.id)
        if user_id:
            bot.send_message(
                chat_id=user_id,
                text=f"üì© *–û—Ç–≤–µ—Ç –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞:*\n{message.text}",
                parse_mode="Markdown"
            )
            bot.send_message(
                chat_id=message.chat.id,
                text="‚úÖ –û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.",
                parse_mode="Markdown"
            )
        else:
            bot.send_message(
                chat_id=message.chat.id,
                text="‚ùå –û—à–∏–±–∫–∞: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.",
                parse_mode="Markdown"
            )