import os
from telebot import types


def register_start_handler(bot):
    @bot.message_handler(commands=["start"])
    def start_command(message):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
        user_id = message.chat.id
        user_name = message.from_user.first_name

        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        bot.send_message(
            message.chat.id,
            f"–ü—Ä–∏–≤–µ—Ç, {user_name}! üëã\n–í–∞—à ID: {user_id}"
        )

        if is_user_registered(user_id):
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –∑–∞–ø—Ä–æ—Å–∏–º —É –Ω–µ–≥–æ –ø–∞—Ä–æ–ª—å
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å:")
            bot.register_next_step_handler(message, verify_password, user_id)
        else:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –±–∞–∑–µ, –∑–∞–ø—Ä–æ—Å–∏–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è
            bot.send_message(message.chat.id, "–í—ã –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å!\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–¥—É–º–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
            bot.register_next_step_handler(message, register_new_password, user_id)

    def register_new_password(message, user_id):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        user_password = message.text.strip()  # –ü–æ–ª—É—á–∞–µ–º –≤–≤–µ–¥—ë–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å
        save_user_data(user_id, user_password, message.from_user.first_name)
        send_welcome_message(message)

    def verify_password(message, user_id):
        """–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–≤–µ–¥—ë–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        user_password = message.text.strip()
        if check_user_password(user_id, user_password):
            send_welcome_message(message)
        else:
            bot.send_message(message.chat.id, "üö´ –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
            bot.register_next_step_handler(message, verify_password, user_id)

    def send_welcome_message(message):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º –∏ inline-–∫–Ω–æ–ø–∫–∞–º–∏."""
        bot_name = "–í–∞—à –ù–∞–¥—ë–∂–Ω—ã–π –ë–æ—Ç"  # –ò–º—è –±–æ—Ç–∞
        # –°–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º
        bot.send_message(
            message.chat.id,
            f"–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! –ú–µ–Ω—è –∑–æ–≤—É—Ç {bot_name}. ü§ñ\n"
            "–Ø –±—É–¥—É –≤–∞—à–∏–º –Ω–∞–¥—ë–∂–Ω—ã–º –¥—Ä—É–≥–æ–º –≤ —ç—Ç–∏ —Å—É—Ä–æ–≤—ã–µ –≤—Ä–µ–º–µ–Ω–∞. üõ°Ô∏è\n"
            "–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω—ë–º —Ä–∞–±–æ—Ç—É! üöÄ"
        )

        # –°–æ–∑–¥–∞–Ω–∏–µ Inline-–∫–Ω–æ–ø–æ–∫
        keyboard = types.InlineKeyboardMarkup()
        rules_button = types.InlineKeyboardButton("üìò –ü—Ä–∞–≤–∏–ª–∞", url="https://example.com/rules")
        main_menu_button = types.InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                                                      callback_data="main_menu")  # –°–≤—è–∑–∞–Ω–æ —Å main_menu.py
        keyboard.add(rules_button, main_menu_button)

        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

    def is_user_registered(user_id):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ñ–∞–π–ª–µ users.txt."""
        if not os.path.exists("users.txt"):
            return False

        with open("users.txt", "r", encoding="utf-8") as file:
            for line in file:
                if f"ID {user_id}:" in line:
                    return True
        return False

    def save_user_data(user_id, password, username):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–∞–π–ª users.txt."""
        with open("users.txt", "a", encoding="utf-8") as file:
            file.write(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}\n")
            file.write(f"ID {user_id}: {password}\n")
            file.write("-----\n")

    def check_user_password(user_id, password):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–≤–µ–¥—ë–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º."""
        if not os.path.exists("users.txt"):
            return False

        with open("users.txt", "r", encoding="utf-8") as file:
            for line in file:
                if f"ID {user_id}:" in line and f": {password}" in line:
                    return True
        return False