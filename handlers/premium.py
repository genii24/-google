
from telebot import types

MANAGER_ID = 7016453953  # ID –º–µ–Ω–µ–¥–∂–µ—Ä–∞
user_manager_mapping = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–≤—è–∑–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


def register_premium_handler(bot):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ '–ü—Ä–µ–º–∏—É–º'."""

    @bot.message_handler(func=lambda message: message.text == "üíé –ü—Ä–µ–º–∏—É–º")
    def handle_premium_services(message):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–µ–º–∏—É–º-–ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤ –∏ –∫–Ω–æ–ø–∫–æ–π '–ö—É–ø–∏—Ç—å –ü—Ä–µ–º–∏—É–º'."""
        bot.send_message(
            chat_id=message.chat.id,
            text=(
                "üíé *–ü—Ä–µ–º–∏—É–º —É—Å–ª—É–≥–∏*\n\n"
                "–û—Ç–∫—Ä–æ–π—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º —Å –Ω–∞—à–∏–º–∏ –ø—Ä–µ–º–∏—É–º-—É—Å–ª—É–≥–∞–º–∏:\n\n"
                "‚ú® *–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:*\n"
                "- –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∫–∞–∂–¥–æ–º—É –∫–ª–∏–µ–Ω—Ç—É.\n"
                "- –í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á.\n"
                "- –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è.\n"
                "- –ù–∞–∏–ª—É—á—à–∏–µ —É—Å–ª–æ–≤–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞.\n\n"
                "üí∞ *–°—Ç–∞–Ω—å—Ç–µ –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–æ–º –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –ª—É—á—à–∏–º –∫–∞—á–µ—Å—Ç–≤–æ–º –∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏!*"
            ),
            parse_mode="Markdown",
            reply_markup=create_premium_keyboard()
        )

    def create_premium_keyboard():
        """–°–æ–∑–¥–∞—ë—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–∫–∞–∑–∞ –ø—Ä–µ–º–∏—É–º-—É—Å–ª—É–≥."""
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        buy_button = types.InlineKeyboardButton(text="üíé –ö—É–ø–∏—Ç—å –ü—Ä–µ–º–∏—É–º", callback_data="order_service")
        keyboard.add(buy_button)
        return keyboard

    @bot.callback_query_handler(func=lambda call: call.data == "order_service")
    def handle_order_service(call):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–∫–∞–∑ –ø—Ä–µ–º–∏—É–º-—É—Å–ª—É–≥–∏."""
        bot.send_message(
            chat_id=call.message.chat.id,
            text=(
                "üìù *–ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏–ª–∏ –¢–ó (—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ), –∏ –æ–Ω–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É.*\n\n"
                "–í–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –º–æ–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å."
            ),
            parse_mode="Markdown"
        )

        # –û–∂–∏–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¢–ó
        bot.register_next_step_handler_by_chat_id(call.message.chat.id, handle_user_tz_submission)

    def handle_user_tz_submission(message):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–∂–µ–ª–∞–Ω–∏—è–º–∏ –∏–ª–∏ –¢–ó –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
        user_tz = message.text
        user_manager_mapping[MANAGER_ID] = message.chat.id  # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É
        bot.send_message(
            chat_id=message.chat.id,
            text="‚úÖ *–í–∞—à–µ –¢–ó —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É!*\n–û–∂–∏–¥–∞–π—Ç–µ, –æ–Ω —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.",
            parse_mode="Markdown"
        )
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton(text="‚úèÔ∏è –û—Ç–≤–µ—Ç–∏—Ç—å", callback_data="reply_to_user"))

        bot.send_message(
            chat_id=MANAGER_ID,
            text=f"üì© *–ù–æ–≤–æ–µ –¢–ó –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:*\n"
                 f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{message.from_user.username or '–ù–µ—Ç –Ω–∏–∫–∞'}\n"
                 f"üí¨ –¢–µ–∫—Å—Ç –¢–ó:\n{user_tz}",
            reply_markup=keyboard,
            parse_mode="Markdown"
        )

    @bot.callback_query_handler(func=lambda call: call.data == "reply_to_user")
    def handle_reply_to_user(call):
        """–ú–µ–Ω–µ–¥–∂–µ—Ä –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É '–û—Ç–≤–µ—Ç–∏—Ç—å', –≤–≤–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞."""
        bot.send_message(
            chat_id=call.message.chat.id,
            text="‚úâÔ∏è *–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.*",
            parse_mode="Markdown"
        )
        bot.register_next_step_handler_by_chat_id(call.message.chat.id, send_reply_to_user)

    def send_reply_to_user(message):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
        user_id = user_manager_mapping.get(message.chat.id)
        if user_id:
            bot.send_message(
                chat_id=user_id,
                text=f"üì© *–û—Ç–≤–µ—Ç –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞:*\n\n{message.text}",
                parse_mode="Markdown"
            )
            bot.send_message(
                chat_id=message.chat.id,
                text="‚úÖ –û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.",
                parse_mode="Markdown"
            )
        else:
            bot.send_message(
                chat_id=message.chat.id,
                text="‚ùå –û—à–∏–±–∫–∞: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.",
                parse_mode="Markdown"
            )
