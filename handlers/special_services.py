from telebot import types

MANAGER_ID = 7016453953  # ID –º–µ–Ω–µ–¥–∂–µ—Ä–∞
user_manager_mapping = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Å–≤—è–∑–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞


def register_special_services_handler(bot):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ '–°–ø–µ—Ü. —Å–µ—Ä–≤–∏—Å—ã'."""

    @bot.message_handler(func=lambda message: message.text == "üõ† –°–ø–µ—Ü. —Å–µ—Ä–≤–∏—Å—ã")
    def handle_special_services(message):
        bot.send_message(
            message.chat.id,
            "üí≥ **–ü—Ä–∏—ë–º –∑–∞–ª–∏–≤–æ–≤ –Ω–∞ –∫–∞—Ä—Ç—ã —Å—Ç—Ä–∞–Ω –°–ù–ì:**\n\n"
            "–ú—ã –ø—Ä–∏–Ω–∏–º–∞–µ–º —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–∞ –Ω–∞—à–∏ –∫–∞—Ä—Ç—ã –∏–∑ —Å—Ç—Ä–∞–Ω –°–ù–ì. –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:",
            parse_mode="Markdown",
            reply_markup=create_country_keyboard()
        )

    def create_country_keyboard():
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Å—Ç—Ä–∞–Ω –°–ù–ì."""
        keyboard = types.InlineKeyboardMarkup(row_width=2)
        countries = [
            ("üá∑üá∫ –†–æ—Å—Å–∏—è", "country_russia"),
            ("üá∞üáø –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω", "country_kazakhstan"),
            ("üáßüáæ –ë–µ–ª–∞—Ä—É—Å—å", "country_belarus"),
            ("üá∫üáø –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω", "country_uzbekistan"),
            ("üá∞üá¨ –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω", "country_kyrgyzstan"),
            ("üá¶üá≤ –ê—Ä–º–µ–Ω–∏—è", "country_armenia"),
        ]
        buttons = [
            types.InlineKeyboardButton(text=country[0], callback_data=country[1])
            for country in countries
        ]
        keyboard.add(*buttons)
        return keyboard

    def create_transaction_keyboard():
        """–ö–Ω–æ–ø–∫–∞ '–ù–∞—á–∞—Ç—å —Å–¥–µ–ª–∫—É'."""
        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(
            types.InlineKeyboardButton(text="üíº –ù–∞—á–∞—Ç—å —Å–¥–µ–ª–∫—É", callback_data="start_transaction")
        )
        return keyboard

    @bot.callback_query_handler(func=lambda call: call.data.startswith("country_"))
    def handle_country_selection(call):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞–Ω—ã."""
        country_name_map = {
            "country_russia": "üá∑üá∫ *–†–æ—Å—Å–∏—è*",
            "country_kazakhstan": "üá∞üáø *–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω*",
            "country_belarus": "üáßüáæ *–ë–µ–ª–∞—Ä—É—Å—å*",
            "country_uzbekistan": "üá∫üáø *–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω*",
            "country_kyrgyzstan": "üá∞üá¨ *–ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω*",
            "country_armenia": "üá¶üá≤ *–ê—Ä–º–µ–Ω–∏—è*",
        }
        country_name = country_name_map.get(call.data, "üè≥Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞")
        bot.send_message(
            call.message.chat.id,
            f"{country_name}\n\n"
            "–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å—Ç—Ä–∞–Ω—É. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–¥–µ–ª–∫—É.",
            parse_mode="Markdown",
            reply_markup=create_transaction_keyboard()
        )

    @bot.callback_query_handler(func=lambda call: call.data == "start_transaction")
    def handle_start_transaction(call):
        """–ù–∞—á–∞–ª–æ —Å–¥–µ–ª–∫–∏ ‚Äî –∑–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–¥–µ–ª–∫–∏."""
        bot.send_message(
            call.message.chat.id,
            "üìù *–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–¥–µ–ª–∫–∏:*\n"
            "- –ù–∞ –∫–∞–∫—É—é –∫–∞—Ä—Ç—É –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–µ–≤–æ–¥.\n"
            "- –ñ–µ–ª–∞–µ–º–∞—è —Å—É–º–º–∞.\n\n"
            "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω –º–µ–Ω–µ–¥–∂–µ—Ä—É.",
            parse_mode="Markdown"
        )
        bot.register_next_step_handler_by_chat_id(call.message.chat.id, handle_transaction_details)

    def handle_transaction_details(message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–¥–µ–ª–∫–∏."""
        user_manager_mapping[MANAGER_ID] = message.chat.id  # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É
        transaction_details = message.text
        bot.send_message(
            chat_id=message.chat.id,
            text="‚úÖ *–í–∞—à –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä—É!*\n"
                 "–û–∂–∏–¥–∞–π—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π.",
            parse_mode="Markdown"
        )
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        keyboard.add(
            types.InlineKeyboardButton(text="‚úèÔ∏è –û—Ç–≤–µ—Ç–∏—Ç—å", callback_data=f"reply_to_user_{message.chat.id}"),
            types.InlineKeyboardButton(text="üìã –ó–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã",
                                       callback_data=f"prepared_replies_{message.chat.id}")
        )

        bot.send_message(
            chat_id=MANAGER_ID,
            text=f"üì© *–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–¥–µ–ª–∫—É:*\n"
                 f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{message.from_user.username or '–ù–µ—Ç –Ω–∏–∫–∞'}\n"
                 f"üí¨ –î–∞–Ω–Ω—ã–µ:\n{transaction_details}",
            reply_markup=keyboard,
            parse_mode="Markdown"
        )

    @bot.callback_query_handler(func=lambda call: call.data.startswith("reply_to_user_"))
    def handle_reply_to_user(call):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
        user_id = int(call.data.split("_")[-1])  # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ callback_data
        bot.send_message(
            chat_id=call.message.chat.id,
            text="‚úâÔ∏è *–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.*",
            parse_mode="Markdown"
        )
        bot.register_next_step_handler_by_chat_id(call.message.chat.id, send_reply_to_user, user_id)

    def send_reply_to_user(message, user_id):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
        bot.send_message(
            chat_id=user_id,
            text=f"üì© *–û—Ç–≤–µ—Ç –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞:*\n{message.text}",
            parse_mode="Markdown"
        )
        bot.send_message(
            chat_id=MANAGER_ID,
            text="‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.",
            parse_mode="Markdown"
        )

    @bot.callback_query_handler(func=lambda call: call.data.startswith("prepared_replies_"))
    def handle_prepared_replies(call):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤."""
        user_id = int(call.data.split("_")[-1])  # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        keyboard = types.InlineKeyboardMarkup(row_width=1)
        # –ó–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
        replies = {
            "reply_1": "–ú—ã –ø—Ä–∏–Ω—è–ª–∏ –≤–∞—à –∑–∞–ø—Ä–æ—Å. –û–∂–∏–¥–∞–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏.",
            "reply_2": "–í–∞—à –∑–∞–ø—Ä–æ—Å —Ç—Ä–µ–±—É–µ—Ç —É—Ç–æ—á–Ω–µ–Ω–∏—è. –ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –±–æ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π.",
            "reply_3": "–í–∞—à –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω. –û–∂–∏–¥–∞–π—Ç–µ –ø–µ—Ä–µ–≤–æ–¥–∞!"
        }
        # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
        for key, value in replies.items():
            keyboard.add(types.InlineKeyboardButton(text=value[:30] + "...", callback_data=f"{key}_{user_id}"))

        bot.send_message(
            chat_id=call.message.chat.id,
            text="üìã *–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:*",
            reply_markup=keyboard,
            parse_mode="Markdown"
        )

    @bot.callback_query_handler(func=lambda call: call.data.startswith("reply_"))
    def handle_selected_reply(call):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∑–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
        data = call.data.split("_")
        reply_key = f"{data[0]}_{data[1]}"  # –ö–ª—é—á —Å —Ç–∏–ø–æ–º –æ—Ç–≤–µ—Ç–∞
        user_id = int(data[-1])  # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        replies = {
            "reply_1": "–ú—ã –ø—Ä–∏–Ω—è–ª–∏ –≤–∞—à –∑–∞–ø—Ä–æ—Å. –û–∂–∏–¥–∞–π—Ç–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏.",
            "reply_2": "–í–∞—à –∑–∞–ø—Ä–æ—Å —Ç—Ä–µ–±—É–µ—Ç —É—Ç–æ—á–Ω–µ–Ω–∏—è. –ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –±–æ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π.",
            "reply_3": "üëã *–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!* –í–∞—à –∑–∞–ø—Ä–æ—Å –±—ã–ª –ø—Ä–∏–Ω—è—Ç. –û–∂–∏–¥–∞–π—Ç–µ, —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è —Å–≤–æ–±–æ–¥–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä.\n\n"
"‚ö†Ô∏è –í—Å–µ —Å–¥–µ–ª–∫–∏ –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è *—Å—Ç—Ä–æ–≥–æ —á–µ—Ä–µ–∑ –≥–∞—Ä–∞–Ω—Ç-—Å–µ—Ä–≤–∏—Å*:\nüëâ [@WTSGuarantedBOT](https://t.me/WTSGuarantedBOT)"
        }

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(
            chat_id=user_id,
            text=f"üì© *–û—Ç–≤–µ—Ç –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞:*\n{replies[reply_key]}",
            parse_mode="Markdown"
        )
        bot.send_message(
            chat_id=MANAGER_ID,
            text="‚úÖ –ó–∞–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.",
            parse_mode="Markdown"
        )